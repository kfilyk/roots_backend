# Generated by Django 4.0.1 on 2022-03-20 20:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('device', models.AutoField(db_column='d_device_id', default=0, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='d_name', max_length=45, null=True)),
                ('token', models.CharField(blank=True, max_length=45, null=True)),
                ('creation_date', models.DateTimeField(blank=True, db_column='d_creation_date', null=True)),
                ('last_update', models.DateTimeField(blank=True, db_column='d_last_update', null=True)),
                ('is_online', models.TextField(blank=True, db_column='d_is_online', null=True)),
                ('mac_address', models.CharField(blank=True, db_column='d_mac_address', max_length=45, null=True)),
            ],
            options={
                'db_table': 'device',
            },
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('experiment', models.AutoField(db_column='e_experiment_id', default=0, primary_key=True, serialize=False)),
                ('score', models.DecimalField(blank=True, db_column='e_score', decimal_places=2, max_digits=2, null=True)),
                ('start_date', models.DateTimeField(blank=True, db_column='e_start_date', null=True)),
                ('end_date', models.DateTimeField(blank=True, db_column='e_end_date', null=True)),
                ('device', models.ForeignKey(blank=True, db_column='e_device_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dashboard.device')),
            ],
            options={
                'db_table': 'experiment',
            },
        ),
        migrations.CreateModel(
            name='ExperimentReading',
            fields=[
                ('experiment_reading_id', models.AutoField(db_column='er_experiment_reading_id', default=0, primary_key=True, serialize=False)),
                ('experiment_id', models.IntegerField(blank=True, db_column='er_experiment_id', null=True)),
                ('water_level', models.IntegerField(blank=True, db_column='er_water_level', null=True)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('water_tds', models.IntegerField(blank=True, db_column='er_water_tds', null=True)),
                ('water_ph', models.IntegerField(blank=True, db_column='er_water_ph', null=True)),
                ('electrical_conductance', models.IntegerField(blank=True, db_column='er_electrical_conductance', null=True)),
                ('reservoirtds', models.IntegerField(blank=True, db_column='er_reservoir_tds', null=True)),
                ('reservoirph', models.IntegerField(blank=True, db_column='reservoirPH', null=True)),
                ('watertemp', models.DecimalField(blank=True, db_column='waterTemp', decimal_places=2, max_digits=2, null=True)),
                ('fillresflag', models.TextField(blank=True, db_column='fillResFlag', null=True)),
                ('airtemp', models.DecimalField(blank=True, db_column='airTemp', decimal_places=2, max_digits=2, null=True)),
                ('airhum', models.DecimalField(blank=True, db_column='airHum', decimal_places=2, max_digits=2, null=True)),
                ('recipestage', models.IntegerField(blank=True, db_column='recipeStage', null=True)),
                ('roomtemp', models.DecimalField(blank=True, db_column='roomTemp', decimal_places=2, max_digits=2, null=True)),
                ('roomhum', models.DecimalField(blank=True, db_column='roomHum', decimal_places=2, max_digits=2, null=True)),
                ('refillreservoirflag', models.TextField(blank=True, db_column='refillReservoirFlag', null=True)),
                ('photo', models.CharField(blank=True, max_length=100, null=True)),
                ('nutrientscore', models.DecimalField(blank=True, db_column='nutrientScore', decimal_places=2, max_digits=2, null=True)),
            ],
            options={
                'db_table': 'experiment_reading',
            },
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('plantid', models.AutoField(db_column='plantID', primary_key=True, serialize=False)),
                ('plantname', models.CharField(db_column='plantName', max_length=45)),
                ('supplier', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'plant',
            },
        ),
        migrations.CreateModel(
            name='Pod',
            fields=[
                ('podid', models.AutoField(db_column='podID', primary_key=True, serialize=False)),
                ('experimentid', models.CharField(blank=True, db_column='experimentID', max_length=45, null=True)),
                ('podreading', models.CharField(blank=True, db_column='podReading', max_length=45, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('plantid', models.ForeignKey(blank=True, db_column='plantID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dashboard.plant')),
            ],
            options={
                'db_table': 'pod',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('recipename', models.CharField(db_column='recipeName', max_length=45, primary_key=True, serialize=False)),
                ('recipedata', models.CharField(blank=True, db_column='recipeData', max_length=45, null=True)),
            ],
            options={
                'db_table': 'recipe',
            },
        ),
        migrations.CreateModel(
            name='PodPack',
            fields=[
                ('podpackid', models.AutoField(db_column='podPackID', primary_key=True, serialize=False)),
                ('experimentid', models.ForeignKey(blank=True, db_column='experimentID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dashboard.experiment')),
                ('podid', models.ForeignKey(blank=True, db_column='podID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dashboard.pod')),
            ],
            options={
                'db_table': 'pod_pack',
            },
        ),
        migrations.AddField(
            model_name='experiment',
            name='pod_pack',
            field=models.ForeignKey(blank=True, db_column='e_podpack_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dashboard.podpack'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='recipe',
            field=models.ForeignKey(blank=True, db_column='e_recipe_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dashboard.recipe'),
        ),
        migrations.AddField(
            model_name='device',
            name='experiment',
            field=models.ForeignKey(blank=True, db_column='d_experiment_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dashboard.experiment'),
        ),
        migrations.AddField(
            model_name='device',
            name='user',
            field=models.ForeignKey(blank=True, db_column='d_user_id', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
