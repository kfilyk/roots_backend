# Generated by Django 4.0.1 on 2022-03-03 20:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('devicename', models.CharField(db_column='deviceName', max_length=45, primary_key=True, serialize=False)),
                ('userid', models.IntegerField(blank=True, db_column='userID', null=True)),
                ('token', models.CharField(blank=True, max_length=45, null=True)),
                ('creationdate', models.DateTimeField(blank=True, db_column='creationDate', null=True)),
                ('lastupdate', models.DateTimeField(blank=True, db_column='lastUpdate', null=True)),
                ('isonline', models.TextField(blank=True, db_column='isOnline', null=True)),
                ('macaddress', models.CharField(blank=True, db_column='macAddress', max_length=45, null=True)),
                ('experimentid', models.IntegerField(blank=True, db_column='experimentID', null=True)),
            ],
            options={
                'db_table': 'device',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Experimentreading',
            fields=[
                ('experimentreadingid', models.AutoField(db_column='experimentReadingID', primary_key=True, serialize=False)),
                ('experimentid', models.IntegerField(blank=True, db_column='experimentID', null=True)),
                ('waterlevel', models.IntegerField(blank=True, db_column='waterLevel', null=True)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('watertds', models.IntegerField(blank=True, db_column='waterTDS', null=True)),
                ('waterph', models.IntegerField(blank=True, db_column='waterPH', null=True)),
                ('electricalconductance', models.IntegerField(blank=True, db_column='electricalConductance', null=True)),
                ('reservoirtds', models.IntegerField(blank=True, db_column='reservoirTDS', null=True)),
                ('reservoirph', models.IntegerField(blank=True, db_column='reservoirPH', null=True)),
                ('watertemp', models.DecimalField(blank=True, db_column='waterTemp', decimal_places=2, max_digits=2, null=True)),
                ('fillresflag', models.TextField(blank=True, db_column='fillResFlag', null=True)),
                ('airtemp', models.DecimalField(blank=True, db_column='airTemp', decimal_places=2, max_digits=2, null=True)),
                ('airhum', models.DecimalField(blank=True, db_column='airHum', decimal_places=2, max_digits=2, null=True)),
                ('recipestage', models.IntegerField(blank=True, db_column='recipeStage', null=True)),
                ('roomtemp', models.DecimalField(blank=True, db_column='roomTemp', decimal_places=2, max_digits=2, null=True)),
                ('roomhum', models.DecimalField(blank=True, db_column='roomHum', decimal_places=2, max_digits=2, null=True)),
                ('refillreservoirflag', models.TextField(blank=True, db_column='refillReservoirFlag', null=True)),
                ('photo', models.CharField(blank=True, max_length=100, null=True)),
                ('nutrientscore', models.DecimalField(blank=True, db_column='nutrientScore', decimal_places=2, max_digits=2, null=True)),
            ],
            options={
                'db_table': 'experimentReading',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('plantid', models.AutoField(db_column='plantID', primary_key=True, serialize=False)),
                ('plantname', models.CharField(db_column='plantName', max_length=45)),
                ('supplier', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'plant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pod',
            fields=[
                ('podid', models.AutoField(db_column='podID', primary_key=True, serialize=False)),
                ('experimentid', models.CharField(blank=True, db_column='experimentID', max_length=45, null=True)),
                ('podreading', models.CharField(blank=True, db_column='podReading', max_length=45, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pod',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Podpack',
            fields=[
                ('podpackid', models.AutoField(db_column='podPackID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'podPack',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('recipename', models.CharField(db_column='recipeName', max_length=45, primary_key=True, serialize=False)),
                ('recipedata', models.CharField(blank=True, db_column='recipeData', max_length=45, null=True)),
            ],
            options={
                'db_table': 'recipe',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('experimentid', models.OneToOneField(db_column='experimentID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dashboard.experimentreading')),
                ('experimentscore', models.DecimalField(blank=True, db_column='experimentScore', decimal_places=2, max_digits=2, null=True)),
                ('startdate', models.DateTimeField(blank=True, db_column='startDate', null=True)),
                ('enddate', models.DateTimeField(blank=True, db_column='endDate', null=True)),
            ],
            options={
                'db_table': 'experiment',
                'managed': False,
            },
        ),
    ]
